{% assign collection = collections[section.settings.collection] %}

{% assign crankbaits = settings.crankbaits | split: ',' %}
{% assign top_waters = settings.top_waters | split: ',' %}
{% assign soft_plastics = settings.soft_plastics | split: ',' %}
{% assign finesses = settings.finesses | split: ',' %}
{% assign blades = settings.blades | split: ',' %}
{% assign jigs = settings.jigs | split: ',' %}
{% assign oversizeds = settings.oversizeds | split: ',' %}

<section class="section section--rodfinder rodfinder rodfinder--{{ section.id }}" {{ section.shopify_attributes }}>
  <div class="section-content{% unless section.settings.padding %} section-content--padding-none{% endunless %}">
    <div class="container">
      <h2 class="rodfinder__title">{{ section.settings.title }}</h2>
      <div class="rodfinder__content">{{ section.settings.text }}</div>
      <div class="rodfinder__form">
        <form action="{{ collection.url }}" method="GET" class="form--standard" enctype="application/x-www-form-urlencoded">
          <button type="button" class="btn btn--secondary btn--small clear-selections clear-selections--hidden">Clear Selections &times;</button>
          <div class="rodfinder__form-field rodfinder__form-field--cast-or-spin">
            <label for="cast-or-spin--{{ section.id }}">Casting or Spinning?</label>
            <div class="form__field form__field--select">
              {% assign cast_types = settings.cast_types | split: ',' %}
              <select id="cast-or-spin--{{ section.id }}" name="cast-or-spin">
                <option val="">Select cast type...</option>
                {% for cast_type in cast_types %}
                  <option value="{{ cast_type }}">{{ cast_type }}</option>
                {% endfor %}
              </select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--lure-type rodfinder__form-field--hidden">
            <label for="lure-type--{{ section.id }}">What type of lure are you using?</label>
            <div class="form__field form__field--select ">
              {% assign lure_types = 'Crankbaits,Top Waters,Soft Plastics,Finesse,Blades,Jigs,Oversized Lures,Swimbaits/Glidebaits' | split: ',' %}
              <select id="lure-type--{{ section.id }}" class="single-option-select">
                <option val="">Select a lure type...</option>
                {% for lure_type in lure_types %}
                  <option value="{{ lure_type }}">{{ lure_type }}</option>
                {% endfor %}
              </select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--bait rodfinder__form-field--hidden">
            <label for="bait--{{ section.id }}">What type of <% lure %> bait are you using?</label>
            <div class="form__field form__field--select">
              <select id="bait--{{ section.id }}" name="bait"></select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--wt rodfinder__form-field--hidden">
            <label for="wt--{{ section.id }}">What is the lure and line weight?</label>
            <div class="form__field form__field--select">
              {% assign wts = settings.wts | split: ',' %}
              <select id="wt--{{ section.id }}" name="lure-line-wt">
                <option val="">Select a lure and line weight...</option>
                {% for wt in wts %}
                  <option value="{{ wt }}">{{ wt }}</option>
                {% endfor %}
              </select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--structore-cover rodfinder__form-field--hidden">
            <label for="structure--{{ section.id }}">What type of structure/cover?</label>
            <div class="form__field form__field--select">
              {% assign structures = settings.structures | split: ',' %}
              <select id="structures--{{ section.id }}" name="structure">
                <option val="">Select a structure/cover...</option>
                {% for structure in structures %}
                  <option value="{{ structure }}">{{ structure }}</option>
                {% endfor %}
              </select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--price rodfinder__form-field--hidden">
            <label for="price--{{ section.id }}">What is your price range?</label>
            <div class="form__field form__field--select">
              {% assign prices = settings.prices | split: '|' %}
              <select id="price--{{ section.id }}" name="price">
                <option>Select a price range...</option>
                {% for price in prices %}
                  <option value="{{ price | split: ':' | first }}">{{ price | split: ':' | last }}</option>
                {% endfor %}
              </select>
              {% include 'icon-caret-down.svg' %}
            </div>
          </div>

          <div class="rodfinder__form-field rodfinder__form-field--actions rodfinder__form-field--hidden">
            <input type="submit" class="btn" id="rodfinder-form-submit--{{ section.id }}" value="Search"/>
          </div>
        </form>
      </div>
    </div>
  </div>
</section>

<script src="{{ 'bundle.rodfinder.min.js' | asset_url }}" defer></script>

<script>
  document.addEventListener( 'DOMContentLoaded', function() {
    window.rodFinder = new REBASE.RodFinder({
      variantData: [
        {% for product in collection.products %}
{% comment %} Wholesale_Club_Product_Prices Start {% endcomment %}
{% assign base_product = product %}
{% assign base_variant = product.selected_or_first_available_variant %}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank %}
  {% for mf in base_product.metafields.sawholesale %}
    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% assign saw_discount = 1 | minus: saw_discount %}

{% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCProduct_Price = base_product.price %}
  {% assign WCProduct_ComparePrice = base_product.compare_at_price %}
  {% assign WCProduct_PriceMin = base_product.price_min %}
  {% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}
  {% assign WCProduct_PriceMax = base_product.price_max %}
  {% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}
  {% assign WCProduct_VariantPrice = base_variant.price %}
  {% assign WCProduct_VariantComparePrice = base_variant.compare_at_price %}
{% else %}   
  {% assign WCProduct_Price = saw_variant_price %}
  {% assign WCProduct_PriceMin = base_product.price_min | times: saw_discount %}
  {% assign WCProduct_PriceMax = base_product.price_max | times: saw_discount %}
  {% assign WCProduct_ComparePrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCProduct_ComparePriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCProduct_ComparePriceMax = base_product.price_max %}{% endif %}
  {% assign WCProduct_VariantPrice = saw_variant_price %}
  {% assign WCProduct_VariantComparePrice = saw_variant_compare_at_price %}
{% endif %}
{% comment %} Wholesale_Club_Product_Prices End {% endcomment %}

  {% if product.object_type == 'product' and product.type == 'SHOPSTORM_HIDDEN_PRODUCT' %}{% continue %}{% endif %}

          {% for variant in product.variants %}
{% comment %} Wholesale_Club_Product_Prices Start {% endcomment %}
{% assign base_product = product %}
{% assign base_variant = variant %}

{% if shop.metafields.sawholesale['base_price'] == blank %}
  {% assign base_price = 'compare_at_price' %}
{% else %}
  {% assign base_price = shop.metafields.sawholesale['base_price'] %}
{% endif %}

{% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

{% if customer.tags != blank %}
  {% for mf in base_product.metafields.sawholesale %}
    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
    {% if customer.tags contains product_customer_tag %}
      {% assign saw_has_discount = true %}
      {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
      {% assign price_key = product_customer_tag | prepend: 'price_' %}
      {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
    {% endif %}
  {% endfor %}
{% endif %}

{% assign saw_discount = 1 | minus: saw_discount %}

{% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
  {% assign saw_variant_compare_at_price = base_variant.price %}
{% else %}
  {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
{% endif %}

{% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
{% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
  {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
{% else %}
  {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
{% endif %}

{% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
  {% assign WCProduct_Price = base_product.price %}
  {% assign WCProduct_ComparePrice = base_product.compare_at_price %}
  {% assign WCProduct_PriceMin = base_product.price_min %}
  {% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}
  {% assign WCProduct_PriceMax = base_product.price_max %}
  {% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}
  {% assign WCProduct_VariantPrice = base_variant.price %}
  {% assign WCProduct_VariantComparePrice = base_variant.compare_at_price %}
{% else %}   
  {% assign WCProduct_Price = saw_variant_price %}
  {% assign WCProduct_PriceMin = base_product.price_min | times: saw_discount %}
  {% assign WCProduct_PriceMax = base_product.price_max | times: saw_discount %}
  {% assign WCProduct_ComparePrice = saw_variant_compare_at_price %}
  {% if base_product.compare_at_price_min != 0 %}{% assign WCProduct_ComparePriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCProduct_ComparePriceMin = base_product.price_min %}{% endif %}
  {% if base_product.compare_at_price_max != 0 %}{% assign WCProduct_ComparePriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCProduct_ComparePriceMax = base_product.price_max %}{% endif %}
  {% assign WCProduct_VariantPrice = saw_variant_price %}
  {% assign WCProduct_VariantComparePrice = saw_variant_compare_at_price %}
{% endif %}
{% comment %} Wholesale_Club_Product_Prices End {% endcomment %}
{
            'cast-or-spin': [{% for option in product.options_with_values %}{% if option.name == 'Cast or Spin' %}"{{variant.options[forloop.index0] | escape }}",{% endif %}{% endfor %}],

            {% if variant.metafields.kistler.baits != blank %}{% assign baits = variant.metafields.kistler.baits | split: ',' %}
            baits: [{% for bait in baits %}"{{ bait | escape }}",{% endfor %}],
            {% endif %}

            {% if variant.metafields.kistler.lure_weight_line_weight != blank %}{% assign wts = variant.metafields.kistler.lure_weight_line_weight | split: ',' %}
            wts: [{% for wt in wts %}"{{ wt | escape }}",{% endfor %}],
            {% endif %}

            price: {{ WCProduct_VariantPrice }},

            {% if variant.metafields.kistler.cover != blank %}{% assign structures = variant.metafields.kistler.cover | split: ',' %}
            structures: [{% for structure in structures %}"{{ structure | escape }}",{% endfor %}],
            {% endif %}

          },{% endfor %}
        {% endfor %}
      ],
      lures: {
        'Crankbaits': [{% for crankbait in crankbaits %}{key: 'crankbaits', value: '{{ crankbait | escape  }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Top Waters': [{% for top_water in top_waters %}{key: 'top-waters', value: '{{ top_water | escape  }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Soft Plastics': [{% for soft_plastic in soft_plastics %}{key: 'soft-plastics', value: '{{ soft_plastic | escape }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Finesse': [{% for finesse in finesses %}{key: 'finesses', value: '{{ finesse | escape }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Blades': [{% for blade in blades %}{key: 'blades', value: '{{ blade | escape }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Jigs': [{% for jig in jigs %}{key: 'jigs', value: '{{ jig | escape }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
        'Oversized Lures': [{% for oversized in oversizeds %}{key: 'oversized-lures', value: '{{ oversized | escape }}'}{% unless forloop.last %},{% endunless%}{% endfor %}],
      }
    });
  });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  (function($){
    var bait_label_template = $('.rodfinder__form-field--bait label').text();

    $('.clear-selections').on('click', function(e) {
      e.preventDefault();
      rodFinder._clearFilters();

      $('.rodfinder__form-field select').prop("selectedIndex", 0)
      $('.rodfinder__form-field:not(.rodfinder__form-field--cast-or-spin').addClass('rodfinder__form-field--hidden');
    })

    $('#cast-or-spin--{{ section.id }}').on('change', function(e) {
      $('.clear-selections').removeClass('clear-selections--hidden');

      var _this = $(this),
        nextEl = _this.parents('.rodfinder__form-field').next();

      rodFinder._applyFilter('cast-or-spin', _this.val());
      nextEl.slideDown().removeClass('rodfinder__form-field--hidden');
    });

    $('#lure-type--{{ section.id }}').on('change', function(e) {
      var val = $(this).val(),
        bait_el = $('.rodfinder__form-field--bait');

      $('#bait--{{ section.id }}').html(rodFinder._getBaitOptions(val))

      if ( val === 'Swimbaits/Glidebaits' ) {
        var wtEl = $('.rodfinder__form-field--wt');
        rodFinder._applyFilter('baits', '');

        bait_el.slideUp().addClass('rodfinder__form-field--hidden');;

        wtEl.slideDown().removeClass('rodfinder__form-field--hidden');
        wtEl.find('option:not(:first-child)').each(function(i, el) {
          $el = $(el);
          if ( rodFinder._isOptionDisabled('wts', $el.val() ) ) {
            $el.attr('disabled', 'disabled')
          } else {
            $el.removeAttr('disabled')
          }
        })
      } else {
        bait_el.find('label').text( bait_label_template.replace('<% lure %>', val) )
        bait_el.slideDown().removeClass('rodfinder__form-field--hidden');
      }
    });

    $('#bait--{{ section.id }}').on('change', function(e) {
      var _this = $(this),
        nextEl = _this.parents('.rodfinder__form-field').next();

      rodFinder._applyFilter('baits', _this.val());
      nextEl.find('option:not(:first-child)').each(function(i, el) {
        $el = $(el);
        if ( rodFinder._isOptionDisabled('wts', $el.val() ) ) {
          $el.attr('disabled', 'disabled')
        } else {
          $el.removeAttr('disabled')
        }
      })
      nextEl.slideDown().removeClass('rodfinder__form-field--hidden');
    });

    $('#wt--{{ section.id }}').on('change', function(e) {
      var _this = $(this),
        nextEl = _this.parents('.rodfinder__form-field').next();

      rodFinder._applyFilter('wts', _this.val());
      nextEl.find('option:not(:first-child)').each(function(i, el) {
        $el = $(el);
        if ( rodFinder._isOptionDisabled('structures', $el.val() ) ) {
          $el.attr('disabled', 'disabled')
        } else {
          $el.removeAttr('disabled')
        }
      });
      nextEl.slideDown().removeClass('rodfinder__form-field--hidden');
    });

    $('#structures--{{ section.id }}').on('change', function(e) {
      var _this = $(this),
        nextEl = _this.parents('.rodfinder__form-field').next();

      rodFinder._applyFilter('structures', _this.val());
      nextEl.find('option:not(:first-child)').each(function(i, el) {
        $el = $(el);
        if ( rodFinder._isOptionDisabled('price', $el.val() ) ) {
          $el.attr('disabled', 'disabled')
        } else {
          $el.removeAttr('disabled')
        }
      });
      nextEl.slideDown().removeClass('rodfinder__form-field--hidden');
    });

    $('#price--{{ section.id }}').on('change', function(e) {
      var _this = $(this);

      rodFinder._applyFilter('price', _this.val());
      _this.parents('.rodfinder__form-field').next().slideDown().removeClass('rodfinder__form-field--hidden');
    });

    $('#rodfinder-form-submit--{{ section.id }}').on('click', function(e) {
      var $form = $(this).parents('form'), query = [];
      e.preventDefault();

      $form.find('select[name="cast-or-spin"],select[name="bait"],select[name="lure-line-wt"],select[name="structure"],select[name="price"]').each( function(i, select) {
        var $select = $(select),
          value = $select.attr('name') === 'price' ? $select.val() : $select.find('option:selected').text();

        if ( value != 'Select a bait...') {
          query.push($select.attr('name') + '=' + encodeURIComponent(value));
        }
      });

      query = query.join('&');

      window.location = '{{ collection.url }}/?' + query;
    });
  })(jQuery)
});
</script>

{% schema %}
  {
    "name": "Rod Finder",
    "settings":[
      {
        "type": "checkbox",
        "id": "padding",
        "label": "Add Padding?",
        "default": false
      },
      {
        "type":"text",
        "id":"title",
        "label":"Title"
      },
      {
        "type":"richtext",
        "id":"text",
        "label":"Text Content"
      },
      {
        "type":"collection",
        "id":"collection",
        "label":"Collection",
        "info":"Collection to direct to once a selection is made"
      }
    ],
    "presets": [{
      "name": "Rod Finder",
      "category": "Content"
    }]
  }
{% endschema %}
